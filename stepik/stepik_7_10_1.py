'''
Подвиг 1. Используя замыкания функций, определите вложенную функцию, которая бы увеличивала значение
переданного параметра на 5 и возвращала бы вычисленный результат. При этом внешняя функция должна
иметь следующую сигнатуру:

def counter_add(): ...

Вызовите функцию counter_add и результат ее работы присвойте переменной с именем cnt. Вызовите внутреннюю
функцию через переменную cnt со значением k, введенным с клавиатуры:

k = int(input())

Выведите результат на экран.

Sample Input:  7
Sample Output:  12

'''

def counter_add():        # Основная функция с пустым полем куда вскоре пойдет значение К
    def inner(k: int):    # Вложенная функция, которая вскоре возьмет значение К из основной функции
        return k+5        # Внутри вложенной функции проводим операцию над К, которое будет передано основной
    return inner          # Обязательное условие каждого замыкания - в конце вернуть название вложенной функции
cnt = counter_add()       # Переменной даем право вызывать основную функцию
k = int(input())          # Получаем наше тестовое число
print(cnt(k))             # При вызове аргумент k попадает в основную функцию, из которой оно попадает во вложенную,
                          # в которой число увеличивается на 5 и из вложенной функции возвращается во внешнюю,
                          # которое мы выводим в этой строке
